// Copyright (C) 2016 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only

/*!
    \example componentset
    \title QML Documentation Example
    \brief Example for documenting QML types.

    \testnoautolist

    \meta tags {test,sample}
    \meta tag {application}
    \meta category {Application Example}
    \meta installpath tutorials

    This example demonstrates one of the ways to document QML types. It also
    generates a warning about a missing example image, on purpose.

    In particular, there are sample types that are documented with QDoc
    commands comments. There are documentation comments for the QML types
    and their public interfaces. The types are grouped into a module, the
    \l{UI Components} module.

    The uicomponents.qdoc file generates
    the overview page for the \l{UI Components} module page.

    The generated documentation is available in the \l{UI Components} module.

    \section1 QML Class

    The QML types use the \\qmltype to document the
    type. In addition, they have the \\inmodule
    command in order for QDoc to associate them to the \c UIComponents module.

    QDoc uses the \\brief command to place a basic
    description when listing the types.

    \section1 Properties, Signals, Handlers, and Methods

    The types have their properties, signals, handlers, and methods
    defined in their respective QML files. QDoc associates the properties and
    methods to the types, therefore, you only need to place the
    documentation above the property, method, or signal.

    To document the type of a \e {property alias}, you must use the
    \\qmlproperty command to specify the data type.

    \code
        \qmlproperty int anAliasedProperty
        An aliased property of type int.
    \endcode

    \section2 Internal Documentation

    You may declare that a documentation is for internal use by placing the
    \\internal command after the beginning QDoc comment
    \begincomment. QDoc will prevent the internal documentation from appearing
    in the public API.

    If you wish to omit certain parts of the documentation, you may use the
    \\omit and \\endomit command.

    \section1 QML Types with C++ Implementation

    This example only demonstrates the documentation for types in QML
    files, but the regular QML commands may be placed
    inside C++ classes to define the public API of the QML type.

*/


/*!
    \qmlmodule UIComponents 1.0
    \title UI Components
    \brief Basic set of UI components.

    This is a listing of a list of UI components implemented by QML types. These
    files are available for general import and they are based on the
    Qt Quick Code Samples.

    This module is part of the \l{componentset}{UIComponents} example.
*/
